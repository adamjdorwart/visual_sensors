<launch>
	<arg name="serial_id"		default=""/>
	<arg name="base_name"		default="rgbd_sensor"/>
	<arg name="calibration"		default="$(find kinect2_bridge)/data/"/>

	<arg name="device_name"		default="kinect"/>
	<arg name="publish_tf"		default="true" />
	<arg name="base_name_tf"	default="$(arg base_name)" />
	<arg name="fps_limit"		default="-1.0"/>
	<arg name="use_png"			default="false"/>
	<arg name="jpeg_quality"	default="90"/>
	<arg name="png_level"		default="1"/>
	<arg name="depth_method"	default="opengl"/>
	<arg name="depth_device"	default="-1"/>
	<arg name="reg_method"		default="opencl"/>
	<arg name="reg_devive"		default="-1"/>
	<arg name="max_depth"		default="12.0"/>
	<arg name="min_depth"		default="0.1"/>
	<arg name="queue_size"		default="5"/>
	<arg name="worker_threads"	default="4"/>
	<arg name="bilateral_filter"	default="true"/>
	<arg name="edge_aware_filter"	default="true"/>
	<arg name="nodelet_manager"	default="$(arg base_name)" />
	<arg name="start_manager"	default="true" />
	<arg name="stream_quality"	default="sd" />  <!-- "sd" = 512x424 qhd" = 960x540 "hd" = 1920x1080 -->

	<node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager"
        if="$(arg start_manager)" output="screen"/>

	<node pkg="nodelet" type="nodelet" name="$(arg base_name)_device"
	    args="load kinect2_bridge/kinect2_bridge_nodelet $(arg nodelet_manager)"
	    respawn="true" output="screen">
		<param name="base_name"         type="str"    value="$(arg device_name)"/>
		<param name="sensor"            type="str"    value="$(arg serial_id)"/>
		<param name="publish_tf"        type="bool"   value="$(arg publish_tf)"/>
		<param name="base_name_tf"      type="str"    value="$(arg base_name_tf)"/>
		<param name="fps_limit"         type="double" value="$(arg fps_limit)"/>
		<param name="calib_path"        type="str"    value="$(arg calibration)"/>
		<param name="use_png"           type="bool"   value="$(arg use_png)"/>
		<param name="jpeg_quality"      type="int"    value="$(arg jpeg_quality)"/>
		<param name="png_level"         type="int"    value="$(arg png_level)"/>
		<param name="depth_method"      type="str"    value="$(arg depth_method)"/>
		<param name="depth_device"      type="int"    value="$(arg depth_device)"/>
		<param name="reg_method"        type="str"    value="$(arg reg_method)"/>
		<param name="reg_devive"        type="int"    value="$(arg reg_devive)"/>
		<param name="max_depth"         type="double" value="$(arg max_depth)"/>
		<param name="min_depth"         type="double" value="$(arg min_depth)"/>
		<param name="queue_size"        type="int"    value="$(arg queue_size)"/>
		<param name="bilateral_filter"  type="bool"   value="$(arg bilateral_filter)"/>
		<param name="edge_aware_filter" type="bool"   value="$(arg edge_aware_filter)"/>
		<param name="worker_threads"    type="int"    value="$(arg worker_threads)"/>

		<remap from="$(arg device_name)/$(arg stream_quality)/camera_info" to="$(arg base_name)/rgb/camera_info"/>
		<remap from="$(arg device_name)/$(arg stream_quality)/image_color" to="$(arg base_name)/rgb/image"/>
		<remap from="$(arg device_name)/$(arg stream_quality)/image_mono" to="$(arg base_name)/rgb/image_mono"/>
		<remap from="$(arg device_name)/$(arg stream_quality)/image_color_rect" to="$(arg base_name)/rgb/image_rect"/>

		<remap from="$(arg device_name)/sd/camera_info" to="$(arg base_name)/ir/camera_info"/>
		<remap from="$(arg device_name)/sd/image_ir" to="$(arg base_name)/ir/image"/>
		<remap from="$(arg device_name)/sd/image_ir_rect" to="$(arg base_name)/ir/image_rect"/>

		<remap from="$(arg device_name)/sd/image_depth" to="$(arg base_name)/depth_registered/image"/>
		<remap from="$(arg device_name)/$(arg stream_quality)/image_depth_rect" to="$(arg base_name)/depth_registered/image_rect"/>
	</node>

	<node pkg="nodelet" type="nodelet" name="$(arg base_name)_points_xyzrgb_$(arg stream_quality)" 
	        args="load depth_image_proc/point_cloud_xyzrgb $(arg nodelet_manager)" respawn="true">
	    <remap from="rgb/camera_info"             to="$(arg base_name)/rgb/camera_info" />
	    <remap from="rgb/image_rect_color"        to="$(arg base_name)/rgb/image_rect" />
	    <remap from="depth_registered/image_rect" to="$(arg base_name)/depth_registered/image_rect" />
	    <remap from="depth_registered/points"     to="$(arg base_name)/depth_registered/points" />
    <param name="queue_size" type="int" value="$(arg queue_size)" />
  </node>
</launch>
